// build-prayer-data.js

const fs = require('fs');
const path = require('path');

// --- Define Paths ---
const prayersDir = path.join(__dirname, 'prayer/prayer-database');
// 1. Output directory for individual prayer JSON files
// --- MODIFIED --- This now correctly points to the private folder.
const outputDataDir = path.join(__dirname, 'prayer-data-private');
// 2. Output file for the lightweight prayer index
const outputIndexFile = path.join(__dirname, 'prayer/prayer-content/prayer-index.ts');

// --- Setup ---
// Create the output directory if it doesn't exist
if (!fs.existsSync(outputDataDir)) {
  fs.mkdirSync(outputDataDir, { recursive: true });
}

const prayerIndex = {}; // This will store minimal data (ID, title) for all prayers

console.log('üîç Starting to scan prayer directories...');

// Read all subdirectories (e.g., '40-mem-prayers')
fs.readdirSync(prayersDir).forEach(subDir => {
  const subDirPath = path.join(prayersDir, subDir);
  if (fs.statSync(subDirPath).isDirectory()) {
    // Read all JSON files within the subdirectory
    fs.readdirSync(subDirPath).forEach(file => {
      if (path.extname(file) === '.json') {
        const filePath = path.join(subDirPath, file);
        const fileContent = fs.readFileSync(filePath, 'utf-8');
        const jsonData = JSON.parse(fileContent);

        const prayerId = Object.keys(jsonData)[0];
        if (prayerId) {
          console.log(`‚úÖ Processing prayer: ${prayerId}`);
          const prayerData = jsonData[prayerId];

          // Action 1: Add minimal info to our index
          prayerIndex[prayerId] = {
            id: prayerId,
            title: prayerData['prayer-title'],
          };

          // Action 2: Write the full prayer data to its own public JSON file
          const individualOutputFile = path.join(outputDataDir, `${prayerId}.json`);
          // Use compact stringify for the smallest file size
          fs.writeFileSync(individualOutputFile, JSON.stringify(prayerData));
        }
      }
    });
  }
});

// Action 3: Create the TypeScript index file content
const indexFileContent = `// This file is auto-generated by build-prayer-data.js. Do not edit manually.

export interface PrayerIndexEntry {
  id: string;
  title: string;
}

export const prayerIndex: { [key: string]: PrayerIndexEntry } = ${JSON.stringify(
  prayerIndex,
  null,
  2
)};
`;

// Write the index file to disk
fs.writeFileSync(outputIndexFile, indexFileContent);

console.log(`\nüéâ Success! Created index for ${Object.keys(prayerIndex).length} prayers.`);
console.log(`üóÇÔ∏è  Individual prayer files are located in: ${outputDataDir}`);